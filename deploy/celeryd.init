#!/bin/bash -e
#
# 1. Edit the "EDITABLE OPTIONS" section below
# 2. Move to /etc/init.d/celeryd_PROJECTNAME
# 3. test start 
# 4. sudo update-rc.d celeryd_PROJECTNAME defaults
#
### BEGIN INIT INFO
# Provides:          celeryd
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop:     $network $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: celery task worker daemon
### END INIT INFO

set -e

DEFAULT_CELERYD="/usr/bin/celeryd"

# /etc/init.d/ssh: start and stop the celery task worker daemon.

######################## EDITABLE OPTIONS
PROJDIR="/usr/local/apps/juniper-blm"
VIRTUAL_ENV="$PROJDIR/env"
CELERYD_PID_FILE="/var/run/celeryd_juniper.pid"
#################################
export DJANGO_SETTINGS_MODULE="settings"
CELERYD_OPTS="-c 2 -E"
CELERYD_USER="www-data"
CELERYD_GROUP="www-data"
CELERYD_LOG_LEVEL="DEBUG"
CELERYD_LOG_FILE="$PROJDIR/logs/celeryd.log"
CELERYD="$VIRTUAL_ENV/bin/python $PROJDIR/priorities/manage.py celeryd"
CELERYD_CHDIR="$PROJDIR/priorities"

CELERYD_LOG_FILE=${CELERYD_LOG_FILE:-${CELERYD_LOGFILE:-"/var/log/celeryd.log"}}
CELERYD_PID_FILE=${CELERYD_PID_FILE:-${CELERYD_PIDFILE:-"/var/run/celeryd.pid"}}
CELERYD_LOG_LEVEL=${CELERYD_LOG_LEVEL:-${CELERYD_LOGLEVEL:-"INFO"}}

CELERYD=${CELERYD:-$DEFAULT_CELERYD}

export CELERY_LOADER

. /lib/lsb/init-functions

CELERYD_OPTS="$CELERYD_OPTS -f $CELERYD_LOG_FILE -l $CELERYD_LOG_LEVEL"

if [ -n "$2" ]; then
    CELERYD_OPTS="$CELERYD_OPTS $2"
fi

# Extra start-stop-daemon options, like user/group.
if [ -n "$CELERYD_USER" ]; then
    DAEMON_OPTS="$DAEMON_OPTS --chuid $CELERYD_USER"
fi
if [ -n "$CELERYD_GROUP" ]; then
    DAEMON_OPTS="$DAEMON_OPTS --group $CELERYD_GROUP"
fi

if [ -n "$CELERYD_CHDIR" ]; then
    DAEMON_OPTS="$DAEMON_OPTS --chdir $CELERYD_CHDIR"
fi


# Are we running from init?
run_by_init() {
    ([ "$previous" ] && [ "$runlevel" ]) || [ "$runlevel" = S ]
}


check_dev_null() {
    if [ ! -c /dev/null ]; then
    if [ "$1" = log_end_msg ]; then
        log_end_msg 1 || true
    fi
    if ! run_by_init; then
        log_action_msg "/dev/null is not a character device!"
    fi
    exit 1
    fi
}


export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"


stop_worker () {
    cmd="start-stop-daemon --stop \
                           --quiet \
                           $* \
                           --pidfile $CELERYD_PID_FILE"
    if $cmd; then
        log_end_msg 0
    else
        log_end_msg 1
    fi
}

start_worker () {
    cmd="start-stop-daemon --start $DAEMON_OPTS \
                           --quiet \
                           --oknodo \
                           --background \
                           --make-pidfile \
                           $* \
                           --pidfile $CELERYD_PID_FILE
                           --exec $CELERYD -- $CELERYD_OPTS"

    echo $cmd
    if [ -n "$VIRTUALENV" ]; then
        source $VIRTUALENV/bin/activate
    fi
    if $cmd; then
        log_end_msg 0
    else
        log_end_msg 1
    fi
}



case "$1" in
  start)
    check_dev_null
    log_daemon_msg "Starting celery task worker server" "celeryd"
    start_worker
    ;;
  stop)
    log_daemon_msg "Stopping celery task worker server" "celeryd"
    stop_worker --oknodo
    ;;

  reload|force-reload)
    echo "Use start+stop"
    ;;

  restart)
    log_daemon_msg "Restarting celery task worker server" "celeryd"
    stop_worker --oknodo --retry 30
    check_dev_null log_end_msg
    start_worker
    ;;

  try-restart)
    log_daemon_msg "Restarting celery task worker server" "celeryd"
    set +e
    stop_worker --retry 30
    RET="$?"
    set -e
    case $RET in
        0)
        # old daemon stopped
        check_dev_null log_end_msg
        start_worker
        ;;
        1)
        # daemon not running
        log_progress_msg "(not running)"
        log_end_msg 0
        ;;
        *)
        # failed to stop
        log_progress_msg "(failed to stop)"
        log_end_msg 1
        ;;
    esac
    ;;

  status)
    status_of_proc -p $CELERYD_PID_FILE $CELERYD celeryd && exit 0 || exit $?
    ;;

  *)
    log_action_msg "Usage: /etc/init.d/celeryd_nplcc {start|stop|force-reload|restart|try-restart|status}"
    exit 1
esac

exit 0
